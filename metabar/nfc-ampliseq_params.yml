# Example/template parameter file for the Nextflow/nf-core ampliseq pipeline (https://nf-co.re/ampliseq)
# Use with the script mcic-scripts/metabar/nfcore_ampliseq.sh
# Jelmer Poelstra, last edited 2025-01-25 (https://github.com/mcic-osu/mcic-scripts)

# ==============================================================================
#                         INPUT AND OUTPUT FILES
# ==============================================================================
# Folder with FASTQ files (all will be used)
input_folder: '/path/to/folder/with/FASTQ/files'

# FASTQ file extension pattern -- adjust as necessary
extension: '/*_R{1,2}_001.fastq.gz'

# Metadata file: plain-text TSV with sample IDs in the first column named 'ID'
#  - This is optional (i.e., can be commented out) and will only affect output downstream of ASV inference
#  - Example file format (see also https://nf-co.re/ampliseq/usage#metadata)
#> ID        treatment
#> sample1   control
#> sample2   inoculated
metadata: '/path/to/metadata/file.tsv'

# ==============================================================================
#                         KEY DATASET-SPECIFIC SETTINGS
# ==============================================================================
# Column name(s) in metadata file with sample category/grouping info:
# - In case of multiple columns, separate by commas, e.g. 'treatment,source,species'
# - Comment out if you are not providing a metadata file
metadata_category: 'treatment'
metadata_category_barplot: 'treatment'

# Forward and reverse primer sequences:
FW_primer: 'TCGTCGGCAGCGTCAGATGTGTATAAGAGACAGCCTACGGGNGGCWGCAG'
RV_primer: 'GTCTCGTGGGCTCGGAGATGTGTATAAGAGACAGGACTACHVGGGTATCTAATCC'

# Min. and max. expected amplicon/ASV lengths (shorter and longer ASVs will be filtered out):
# - For 16S, a range of 5-10 basepairs make sense
# - For ITS, large size variation is expected, and these options can be commented out
min_len_asv: 250
max_len_asv: 260

# Desired forward and reverse read lengths after truncation:
# - Note that the reads MUST be able to overlap so the optimal values depend on the amplicon length
# - For 16S, these can be set such that there is only a bit (10-50) of overlap
# - For ITS, because of natural amplicon length variation, better to leave these commented out
#   and to use the default quality-based truncation instead
# (See also https://nf-co.re/ampliseq/parameters#read-trimming-and-quality-filtering)
# trunclenf: 200
# trunclenr: 150

# Whether the data comes from an Illumina Nextseq or Novaseq machine
illumina_novaseq: true

# ==============================================================================
#                         16S vs ITS SETTINGS
# ==============================================================================
# Taxa to keep/exclude:
# A) Domains to KEEP after initial sequence classification with Barnap (see https://nf-co.re/ampliseq/parameters#filter_ssu)
#    NOTE: Only applies to 16S, comment out for ITS
filter_ssu: 'bac'
# B) Taxa to REMOVE after ASV taxonomic classification with DADA2:
#    NOTE: Below option is suitable for 16S
exclude_taxa: 'mitochondria,chloroplast,archaea'

# Whether data is 16S or ITS: false => 16S / true => ITS
illumina_pe_its: false

# Reference taxonomy for taxonomic classification of ASVs
# (Check https://nf-co.re/ampliseq/parameters#dada_ref_taxonomy for database version info!)
# - For 16S, use the Silva database as in the example entry below
# - For ITS, use: 'unite-fungi=9.0'
dada_ref_taxonomy: 'silva=138'

# Whether to add UNITE species hypotheses (SH).
# Set to true for ITS; doesn't apply to 16S so set to false like below or comment out
addsh: false

# ==============================================================================
#                         GENERAL SETTINGS
# ==============================================================================
# I would recommend the below settings for most or all datasets:

# DADA2 ASV inference method, one of: 'independent' / 'pooled' / 'pseudo'
sample_inference: 'pseudo'

# Min. ASV frequency (rarer will be filtered out)
min_frequency: 2

# If this is set to false, the pipeline will stop running when certain samples
# have too few reads left after trimming
ignore_failed_trimming: true
